// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/davars/dbeval/ent/article"
	"github.com/davars/dbeval/ent/author"
	"github.com/davars/dbeval/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescTitle is the schema descriptor for title field.
	articleDescTitle := articleFields[1].Descriptor()
	// article.DefaultTitle holds the default value on creation for the title field.
	article.DefaultTitle = articleDescTitle.Default.(string)
	// articleDescBody is the schema descriptor for body field.
	articleDescBody := articleFields[2].Descriptor()
	// article.DefaultBody holds the default value on creation for the body field.
	article.DefaultBody = articleDescBody.Default.(string)
	// articleDescPublishedAt is the schema descriptor for published_at field.
	articleDescPublishedAt := articleFields[3].Descriptor()
	// article.DefaultPublishedAt holds the default value on creation for the published_at field.
	article.DefaultPublishedAt = articleDescPublishedAt.Default.(func() time.Time)
	authorFields := schema.Author{}.Fields()
	_ = authorFields
	// authorDescName is the schema descriptor for name field.
	authorDescName := authorFields[1].Descriptor()
	// author.DefaultName holds the default value on creation for the name field.
	author.DefaultName = authorDescName.Default.(string)
}
